#!/bin/bash

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo -e "${GREEN}üê≥ Bot Framework - Docker Setup${NC}"
echo "================================="

# Verificar se Docker est√° instalado
if ! command -v docker &> /dev/null; then
    echo -e "${RED}‚ùå Docker n√£o est√° instalado!${NC}"
    echo "Instale Docker Desktop: https://www.docker.com/products/docker-desktop"
    exit 1
fi

# Verificar se Docker est√° rodando
if ! docker info &> /dev/null; then
    echo -e "${RED}‚ùå Docker n√£o est√° rodando!${NC}"
    echo "Inicie o Docker Desktop e tente novamente."
    exit 1
fi

# Verificar arquivo .env
if [ ! -f .env ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  Arquivo .env n√£o encontrado!${NC}"
    echo "Criando .env a partir do exemplo..."
    cp .env.example .env
    echo -e "${YELLOW}üìù Por favor, edite o arquivo .env com suas chaves do Azure!${NC}"
    echo "Depois execute este script novamente."
    exit 1
fi

# Menu de op√ß√µes
echo ""
echo "Escolha uma op√ß√£o:"
echo "1) Build e Run (primeira vez)"
echo "2) Apenas Run (imagem j√° existe)"
echo "3) Rebuild for√ßado"
echo "4) Parar containers"
echo "5) Ver logs"
echo "6) Limpar tudo"
echo ""
read -p "Op√ß√£o: " option

case $option in
    1)
        echo -e "${GREEN}üî® Building e iniciando...${NC}"
        docker-compose up --build -d
        ;;
    2)
        echo -e "${GREEN}üöÄ Iniciando containers...${NC}"
        docker-compose up -d
        ;;
    3)
        echo -e "${YELLOW}üîÑ Rebuild for√ßado...${NC}"
        docker-compose build --no-cache
        docker-compose up -d
        ;;
    4)
        echo -e "${YELLOW}‚èπ  Parando containers...${NC}"
        docker-compose down
        ;;
    5)
        echo -e "${GREEN}üìã Mostrando logs...${NC}"
        docker-compose logs -f
        ;;
    6)
        echo -e "${RED}üßπ Limpando tudo...${NC}"
        docker-compose down -v
        docker system prune -a
        ;;
    *)
        echo -e "${RED}Op√ß√£o inv√°lida!${NC}"
        exit 1
        ;;
esac

# Se iniciou o container, mostrar status
if [[ $option == 1 ]] || [[ $option == 2 ]] || [[ $option == 3 ]]; then
    echo ""
    echo -e "${GREEN}‚úÖ Container iniciado!${NC}"
    echo ""
    echo "üîó URLs dispon√≠veis:"
    echo "   - API: http://localhost:8000"
    echo "   - Health: http://localhost:8000/healthz"
    echo "   - Docs: http://localhost:8000/docs"
    echo ""
    echo "üìù Comandos √∫teis:"
    echo "   - Ver logs: docker-compose logs -f"
    echo "   - Parar: docker-compose down"
    echo "   - Entrar no container: docker exec -it mesh-bot bash"
    echo ""
    echo -e "${GREEN}üß™ Testando health check...${NC}"
    sleep 5
    curl -s http://localhost:8000/healthz | python3 -m json.tool
fi